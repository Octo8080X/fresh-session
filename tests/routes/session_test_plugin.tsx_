import { useSignal } from "@preact/signals";
import { HandlerContext, Handlers } from "$fresh/server.ts";
import type { WithSession } from "../../mod.ts";

export const handler: Handlers<
  unknown,
  WithSession<"count" | "a" | "b", "error">
> = {
  GET(
    _req: Request,
    ctx: HandlerContext<unknown, WithSession<"count" | "a" | "b", "error">>,
  ) {
    console.log(ctx.state.session.getRawData());
    ctx.state.session.set("b", Number(ctx.state.session.get("b")) + 1);
    ctx.state.session.set("a", Number(ctx.state.session.get("a")) + 1);
    console.log(ctx.state.session.getRawData());

    if (Number(ctx.state.session.get("b") == 3)) {
      //ctx.state.session.destroy();
      ctx.state.session.rotateKey();
      ctx.state.session.delete("b");
    }
    if (Number(ctx.state.session.get("a") == 7)) {
      ctx.state.session.destroy();
    }

    return ctx.render();
  },
};

export default function Home(
  p: HandlerContext<unknown, WithSession<"count" | "a"| "b", "error">>,
) {
  console.log(p.state.session.getRawData());
  //p.state.session.set("a", 1);
  const countR = p.state.session.get("count");
  p.state.session.set("count", Number(countR) + 1);
  p.state.session.flash("error", `error:${countR}`);

  const count = useSignal(3);
  return (
    <div class="px-4 py-8 mx-auto bg-[#86efac]">
      <div class="max-w-screen-md mx-auto flex flex-col items-center justify-center">
        <img
          class="my-6"
          src="/logo.svg"
          width="128"
          height="128"
          alt="the Fresh logo: a sliced lemon dripping with juice"
        />
        <h1 class="text-4xl font-bold">Welcome to Fresh</h1>
        <p class="my-4">
          Try updating this message in the
          <code class="mx-2">./routes/index.tsx</code> file, and refresh.
        </p>
        <Counter count={count} />
      </div>
      <p>const:{countR}</p>
      <p>err:{p.state.session.flash("error")}</p>
      <p>a:{p.state.session.get("a")}</p>
      <p>b:{p.state.session.get("b")}</p>

      <a href="/a">/a</a>
    </div>
  );
}
